for (j in 1:dimtempData[1])
{
for (k in 1:28)  # 28 dose records
{
tempValue = tempData[j,k]
if (!is.na(tempValue))
if (tempValue >= 1 & tempValue <=2)
{
tempActual <- tempActual+1
}
else if (tempValue == 3)
{
tempNPO <- tempNPO + 1
}
else if (tempValue == 5)
{
tempRefuse <- tempRefuse + 1
} else if (tempValue == 6)
{
tempOther <- tempOther + 1
}
}
}
tempMatrix[3, i+1] <- tempActual
tempMatrix[4, i+1] <- tempNPO
tempMatrix[5, i+1] <- tempRefuse
tempMatrix[6, i+1] <- tempOther
tempMatrix[2, i+1] <- sum(tempMatrix[3:6, i+1])
}
# add the sums of statistics to the matrix for the first column "ALL"
tempMatrix[,1] <- t(rowSums(tempMatrix, na.rm = TRUE))
# create tempMatrix2 for proportion calculation
tempMatrix2 <- tempMatrix[3:6, ]
tempMargin <- margin.table(tempMatrix[3:6, ],2)
tempMargin <- rbind(tempMargin, tempMargin, tempMargin, tempMargin)
tempMatrix2[] <- percent(tempMatrix2/tempMargin)
# add the number of patients in each facility to the Matrix of Statistics
outputTable1_facility <- outputTable1_facility[c(15, 1, 2, 3, 4, 5,6, 7, 8, 9, 10, 11, 12, 13, 14 )]
tempPatients <- as.vector(outputTable1_facility)
tempMatrix[1, ] <- tempPatients
# add names for column and rows
NameFacility <- names(outputTable1_facility)
colnames(tempMatrix) <- c(NameFacility)
rownames(tempMatrix) <- c("No. of Patients Enrolled", "Expected BP Doses", "    Actual BP Doeses Adminstered", "    BP Doeses Not Admnistered-NPO", "    BP Doses Not Adminstered-Refused", "    BP Doses Not Adminstered-Other")
tempMatrix[] <- as.character(tempMatrix)
for (i in 1:15)
{
for (j in 3:6)
{
tempMatrix[j, i] <- paste(c(tempMatrix[j, i], " (", tempMatrix2[j-2, i], ")"), collapse="")
}
}
grid.table(tempMatrix)
# Kyongje Sung
# Sep-10-2019
# R-Studio 1.1.463
# R 64bit 3.5.2
#library(plyr)
#library(formattable)
library(grid)
library(gridExtra)
library(scales)
InputFile1 = "C:/Users/ksung/Documents/R/BP_data/med_dat.csv"
med_data <- read.csv(file = InputFile1, header = TRUE, sep=",")
# Next line excludes patients who did not start the study medication.
# Skip this line if all patients need to be included.
med_data <- subset(med_data, smf_bp_seca_start !="")
# number of patients recevied BP in each facility
outputTable1_facility <- addmargins(table(med_data$facilitycode), FUN = list(list(ALL = sum)))
# get the names of facility for later use
dataDim <- dim(med_data)
numFacility <- dim(outputTable1_facility) - 1 # remove the added count due to "ALL" column
NameFacility <- names(outputTable1_facility)[1:14]
# Matrix to store statistics for table 1
tempMatrix <- matrix(, nrow = 6, ncol = numFacility+1) # rows: NoPatients, ExpectedBP, ActualBP, NPO, Refuse, Other; Columns: 14 facilities + Sum
for (rows in 1:5)
{  tempMatrix[rows, ] <- numeric(15) }
# For each facility, find the statistics
for (i in 1:numFacility)
{
tempData <- subset(med_data, facilitycode == NameFacility[i], select=smf_bp_seca_amtake01:smf_bp_seca_pmtake14)
tempActual <- 0
tempNPO <- 0
tempRefuse <- 0
tempOther <- 0
dimtempData <- dim(tempData)
for (j in 1:dimtempData[1])
{
for (k in 1:28)  # 28 dose records
{
tempValue = tempData[j,k]
if (!is.na(tempValue))
if (tempValue >= 1 & tempValue <=2)
{
tempActual <- tempActual+1
}
else if (tempValue == 3)
{
tempNPO <- tempNPO + 1
}
else if (tempValue == 5)
{
tempRefuse <- tempRefuse + 1
} else if (tempValue == 6)
{
tempOther <- tempOther + 1
}
}
}
tempMatrix[3, i+1] <- tempActual
tempMatrix[4, i+1] <- tempNPO
tempMatrix[5, i+1] <- tempRefuse
tempMatrix[6, i+1] <- tempOther
tempMatrix[2, i+1] <- sum(tempMatrix[3:6, i+1])
}
# add the sums of statistics to the matrix for the first column "ALL"
tempMatrix[,1] <- t(rowSums(tempMatrix, na.rm = TRUE))
# create tempMatrix2 for proportion calculation
tempMatrix2 <- tempMatrix[3:6, ]
tempMargin <- margin.table(tempMatrix[3:6, ],2)
tempMargin <- rbind(tempMargin, tempMargin, tempMargin, tempMargin)
tempMatrix2[] <- (tempMatrix2/tempMargin)
tempMatrix2[is.nan(tempMatrix2)] <-0
tempMatrix2[] <- percent(tempMatrix2)
# add the number of patients in each facility to the Matrix of Statistics
outputTable1_facility <- outputTable1_facility[c(15, 1, 2, 3, 4, 5,6, 7, 8, 9, 10, 11, 12, 13, 14 )]
tempPatients <- as.vector(outputTable1_facility)
tempMatrix[1, ] <- tempPatients
# add names for column and rows
NameFacility <- names(outputTable1_facility)
colnames(tempMatrix) <- c(NameFacility)
rownames(tempMatrix) <- c("No. of Patients Enrolled", "Expected BP Doses", "    Actual BP Doeses Adminstered", "    BP Doeses Not Admnistered-NPO", "    BP Doses Not Adminstered-Refused", "    BP Doses Not Adminstered-Other")
tempMatrix[] <- as.character(tempMatrix)
for (i in 1:15)
{
for (j in 3:6)
{
tempMatrix[j, i] <- paste(c(tempMatrix[j, i], " (", tempMatrix2[j-2, i], ")"), collapse="")
}
}
View(tempMatrix2)
grid.table(tempMatrix)
# Kyongje Sung
# Sep-10-2019
# R-Studio 1.1.463
# R 64bit 3.5.2
#library(plyr)
#library(formattable)
library(grid)
library(gridExtra)
library(scales)
InputFile1 = "C:/Users/ksung/Documents/R/BP_data/med_dat.csv"
med_data <- read.csv(file = InputFile1, header = TRUE, sep=",")
# Next line excludes patients who did not start the study medication.
# Skip this line if all patients need to be included.
med_data <- subset(med_data, smf_bp_seca_start !="")
# number of patients recevied BP in each facility
outputTable1_facility <- addmargins(table(med_data$facilitycode), FUN = list(list(ALL = sum)))
# get the names of facility for later use
dataDim <- dim(med_data)
numFacility <- dim(outputTable1_facility) - 1 # remove the added count due to "ALL" column
NameFacility <- names(outputTable1_facility)[1:14]
# Matrix to store statistics for table 1
tempMatrix <- matrix(, nrow = 6, ncol = numFacility+1) # rows: NoPatients, ExpectedBP, ActualBP, NPO, Refuse, Other; Columns: 14 facilities + Sum
for (rows in 1:5)
{  tempMatrix[rows, ] <- numeric(15) }
# For each facility, find the statistics
for (i in 1:numFacility)
{
tempData <- subset(med_data, facilitycode == NameFacility[i], select=smf_bp_seca_amtake01:smf_bp_seca_pmtake14)
tempActual <- 0
tempNPO <- 0
tempRefuse <- 0
tempOther <- 0
dimtempData <- dim(tempData)
for (j in 1:dimtempData[1])
{
for (k in 1:28)  # 28 dose records
{
tempValue = tempData[j,k]
if (!is.na(tempValue))
if (tempValue >= 1 & tempValue <=2)
{
tempActual <- tempActual+1
}
else if (tempValue == 3)
{
tempNPO <- tempNPO + 1
}
else if (tempValue == 5)
{
tempRefuse <- tempRefuse + 1
} else if (tempValue == 6)
{
tempOther <- tempOther + 1
}
}
}
tempMatrix[3, i+1] <- tempActual
tempMatrix[4, i+1] <- tempNPO
tempMatrix[5, i+1] <- tempRefuse
tempMatrix[6, i+1] <- tempOther
tempMatrix[2, i+1] <- sum(tempMatrix[3:6, i+1])
}
# add the sums of statistics to the matrix for the first column "ALL"
tempMatrix[,1] <- t(rowSums(tempMatrix, na.rm = TRUE))
# create tempMatrix2 for proportion calculation
tempMatrix2 <- tempMatrix[3:6, ]
tempMargin <- margin.table(tempMatrix[3:6, ],2)
tempMargin <- rbind(tempMargin, tempMargin, tempMargin, tempMargin)
tempMatrix2[] <- (tempMatrix2/tempMargin)
tempMatrix2[is.nan(tempMatrix2)] <-0
tempMatrix2[] <- percent(tempMatrix2)
# add the number of patients in each facility to the Matrix of Statistics
outputTable1_facility <- outputTable1_facility[c(15, 1, 2, 3, 4, 5,6, 7, 8, 9, 10, 11, 12, 13, 14 )]
tempPatients <- as.vector(outputTable1_facility)
tempMatrix[1, ] <- tempPatients
# add names for column and rows
NameFacility <- names(outputTable1_facility)
colnames(tempMatrix) <- c(NameFacility)
rownames(tempMatrix) <- c("No. of Patients Enrolled", "Expected BP Doses", "    Actual BP Doeses Adminstered", "    BP Doeses Not Admnistered-NPO", "    BP Doses Not Adminstered-Refused", "    BP Doses Not Adminstered-Other")
tempMatrix[] <- as.character(tempMatrix)
for (i in 1:15)
{
for (j in 3:6)
{
tempMatrix[j, i] <- paste(c(tempMatrix[j, i], " (", tempMatrix2[j-2, i], ")"), collapse="")
}
}
grid.table(tempMatrix)
# Kyongje Sung
# Sep-12-2019
# R-Studio 1.1.463
# R 64bit 3.5.2 for Windows
# Table 2
#library(plyr)
#library(formattable)
library(grid)
library(gridExtra)
library(scales)
library(date)
InputFile1 = "C:/Users/ksung/Documents/R/BP_data/med_dat.csv"
InputFile2 = "C:/Users/ksung/Documents/R/BP_data/df_date_dat.csv"
med_data <- read.csv(file = InputFile1, header = TRUE, sep=",")
df_data <- read.csv(file = InputFile2, header = TRUE, sep = ",")
# Next line excludes patients who did not start the OR Kit
med_data <- subset(med_data, smf_or1_seca_start !="")
# number of patients recevied OR kit in each facility
outputTable1_facility <- addmargins(table(med_data$facilitycode), FUN = list(list(ALL = sum)))
# get the names of facility for later use
dataDim <- dim(med_data)
numFacility <- dim(outputTable1_facility) - 1 # remove the added count due to "ALL" column
NameFacility <- names(outputTable1_facility)[1:numFacility]
#numFacility <- 2
# Matrix to store statistics for "Expected Pre-Op IV Doses" of table 2 (including the total in the first column )
tempMatrix <- matrix(, nrow = 5, ncol = numFacility+1) # rows: NoPatients, ExpectedBP, ActualBP, NPO, Refuse, Other; Columns: 14 facilities + Sum
for (rows in 1:5)
{  tempMatrix[rows, ] <- numeric(numFacility+1) }
# Matrix to store statistics for "Expected Post-Op IV Doses" of table 2
tempMatrix2 <- tempMatrix[1:4, ]
# Matrix to store statistics for "Expected Pre-Op PO Doses" of table 2
tempMatrix3 <- tempMatrix[1:5, ]
# Matrix to store statistics for "Expected Post-Op PO Doses" of table 2
tempMatrix4 <- tempMatrix[1:5, ]
# For each facility, find the statistics
for (i in 1:numFacility)
{
# select a subset of data for the facility
tempData <- subset(med_data, facilitycode == NameFacility[i], select=c(study_id, facilitycode, smf_or1_seca_start:smf_or6_secb_postpotake04))
datadim <- dim(tempData) # find the number of paticipants in the facility
# temporary variables to store statistics
preOP_IV_actual <- 0
preOP_IV_refuse <- 0
preOP_IV_other <-0
postOP_IV_actual <-0
postOP_IV_refuse <- 0
postOP_IV_other <- 0
preOP_PO_actual <- 0
preOP_PO_NPO <-0
preOP_PO_refuse <- 0
preOP_PO_other <- 0
postOP_PO_actual <-0
postOP_PO_NPO <- 0
postOP_PO_refuse <- 0
postOP_PO_other <- 0
for (j in 1:datadim[1])
{
tempID <- tempData[j,1] # study participant ID
rownum <- which(df_data$study_id == tempID) # find the location of participant in df_data
dateDF <- as.Date(df_data$Df_dt[rownum], "%m/%d/%Y")
# find how many OR kits were used BEFORE DF date.
numORkits <- 0
for (k in 1:6) # total 6 ORkits are possible
{
if ((tempData[j,k+2] !="") | (!is.na(tempData[j,k+2])))
{
OrDate <- as.Date(tempData[j,k+2], "%m/%d/%Y")
if ((dateDF - OrDate) > 1)  # Ignore OR Kits administered on or afer DF date
{                           # According to insturctions, we are looking for OR kit administration BEFORE DF.
numORkits <-k             # We will ignore any OR Kits adminstered on or after DF date
}
else
{
break
}
}
}
if (numORkits > 0)
{
for (t in 1:numORkits)
{
for (tt in 1:14) # 14 vairaibles to read starting from 21st in tempData
{
tempvalue1 <- tempData[j, (14*(t-1) + (21+(tt-1)))]
#print(tempvalue1)
if (!is.na(tempvalue1))
{
if (tt == 1) #pre OP IV
{
if ((tempvalue1 >=1) | (tempvalue1 <=2))
{
preOP_IV_actual = preOP_IV_actual + 1
}
else if (tempvalue1 == 3)
{
preOP_IV_refuse = preOP_IV_refuse + 1
}
else if (tempvalue1 == 4)
{
preOP_IV_other = preOP_IV_other + 1
}
}
else if ((tt >=2) & (tt <= 9)) # post OP IVs
{
if ((tempvalue1 >=1) | (tempvalue1 <=2))
{
postOP_IV_actual = postOP_IV_actual + 1
}
else if (tempvalue1 == 3)
{
postOP_IV_refuse = postOP_IV_refuse + 1
}
else if (tempvalue1 == 4)
{
postOP_IV_other = postOP_IV_other + 1
}
}
else if (tt == 10) # preOP_PO
{
if ((tempvalue1 >=1) | (tempvalue1 <=2))
{
preOP_PO_actual = preOP_PO_actual + 1
}
else if (tempvalue1 == 3)
{
preOP_PO_NPO = preOP_PO_NPO + 1
}
else if (tempvalue1 == 4)
{
preOP_PO_refuse = preOP_PO_refuse + 1
}
else if (tempvalue1 == 5)
{
preOP_PO_other = preOP_PO_other + 1
}
}
else if ((tt >= 11) &(tt <= 14)) # postOP_PO
{
if ((tempvalue1>=1) | (tempvalue1 <=2))
{
postOP_PO_actual = postOP_PO_actual + 1
}
else if (tempvalue1 == 3)
{
postOP_PO_NPO = postOP_PO_NPO + 1
}
else if (tempvalue1 == 4)
{
postOP_PO_refuse = postOP_PO_refuse + 1
}
else if (tempvalue1 == 5)
{
postOP_PO_other = postOP_PO_other + 1
}
}
}
}
}
}
}
tempMatrix[3, i] <- preOP_IV_actual
tempMatrix[4, i] <- preOP_IV_refuse
tempMatrix[5, i] <- preOP_IV_other
tempMatrix[2, i] <- sum(tempMatrix[3:5, i])
tempMatrix2[2, i] <- postOP_IV_actual
tempMatrix2[3, i] <- postOP_IV_refuse
tempMatrix2[4, i] <- postOP_IV_other
tempMatrix2[1, i] <- sum(tempMatrix2[2:4, i])
tempMatrix3[2, i] <- preOP_PO_actual
tempMatrix3[3, i] <- preOP_PO_NPO
tempMatrix3[4, i] <- preOP_PO_refuse
tempMatrix3[5, i] <- preOP_PO_other
tempMatrix3[1, i] <- sum(tempMatrix3[2:5, i])
tempMatrix4[2, i] <- postOP_PO_actual
tempMatrix4[3, i] <- postOP_PO_NPO
tempMatrix4[4, i] <- postOP_PO_refuse
tempMatrix4[5, i] <- postOP_PO_other
tempMatrix4[1, i] <- sum(tempMatrix4[2:5, i])
}
# matrices for proportion values
# Pre OP IV matrix
tempMatrix[2:5,1] <- t(rowSums(tempMatrix[2:5, ], na.rm = TRUE))
pMatrix <- tempMatrix[3:5, ]
#pMargin <- margin.table(tempMatrix[3:5, ],2)
pMargin <- tempMatrix[2, ]
pMargin <- rbind(pMargin, pMargin, pMargin)
pMatrix[] <- (tempMatrix[3:5,] /pMargin)
pMatrix[is.nan(pMatrix)] <- 0 # replace NaN with 0
pMatrix[] <- percent(pMatrix)
# Post OP IV matrix
tempMatrix2[1:4,1] <- t(rowSums(tempMatrix2[1:4, ], na.rm = TRUE))
pMatrix2 <- tempMatrix2[2:4, ]
pMargin2 <- tempMatrix2[1, ]
pMargin2 <- rbind(pMargin2, pMargin2, pMargin2)
pMatrix2[] <- (tempMatrix2[2:4,] /pMargin2)
pMatrix2[is.nan(pMatrix2)] <- 0 # replace NaN with 0
pMatrix2[] <- percent(pMatrix2)
# Pre OP PO matrix
tempMatrix3[1:5,1] <- t(rowSums(tempMatrix3[1:5, ], na.rm = TRUE))
pMatrix3 <- tempMatrix3[2:5, ]
pMargin3 <- tempMatrix3[1, ]
pMargin3 <- rbind(pMargin3, pMargin3, pMargin3, pMargin3)
pMatrix3[] <- (tempMatrix3[2:5,] /pMargin3)
pMatrix3[is.nan(pMatrix3)] <- 0 # replace NaN with 0
pMatrix3[] <- percent(pMatrix3)
# Post OP PO matrix
tempMatrix4[1:5,1] <- t(rowSums(tempMatrix4[1:5, ], na.rm = TRUE))
pMatrix4 <- tempMatrix4[2:5, ]
pMargin4 <- tempMatrix4[1, ]
pMargin4 <- rbind(pMargin4, pMargin4, pMargin4, pMargin4)
pMatrix4[] <- (tempMatrix4[2:5,] /pMargin4)
pMatrix4[is.nan(pMatrix4)] <- 0 # replace NaN with 0
pMatrix4[] <- percent(pMatrix4)
# Merge all matrix table
Table2_matrix = rbind(tempMatrix, tempMatrix2, tempMatrix3, tempMatrix4)
Table2_pMatrix = rbind(pMatrix, pMatrix2, pMatrix3, pMatrix4)
# add the number of patients in each facility to the Matrix of Statistics
outputTable1_facility <- outputTable1_facility[c(15, 1, 2, 3, 4, 5,6, 7, 8, 9, 10, 11, 12, 13, 14 )]
tempPatients <- as.vector(outputTable1_facility)
Table2_matrix[1, ] <- tempPatients
# add names for column and rows
NameFacility <- names(outputTable1_facility)
colnames(Table2_matrix) <- c(NameFacility)
rownames(Table2_matrix) <- c("Number Enrolled", "Expected Pre-OP IV Doses",
"    No. of Pre-OP IV Doses Administered","    No. of Pre-OP IV Doses Not Administered-Refused", "    No. of Pre-OP IV Doses Not Administered_Other",
"Expected Post-OP IV Doses",
"    No. of Post-OP IV Doses Administered", "    No. of Post-OP IV Doses Not Administered-Refused", "    No. of Post-OP IV Doses Not Administered_Other",
"Expected Pre-OP PO Doses",
"    No. of Pre-OP PO Doses Administered", "    No. of Pre-OP PO Doses Not Administered-NPO", "    No. of Pre-OP IV Doses Not Administered_Refused","    No. of Pre-OP PO Doses Not Administered_Other",
"Expected Post-OP PO Doses",
"    No. of Post-OP PO Doses Administered", "    No. of Post-OP PO Doses Not Administered-NPO", "    No. of Post-OP IV Doses Not Administered_Refused","    No. of Post-OP PO Doses Not Administered_Other")
# change to character to merge with proportion Matrix
Table2_matrix[] <- as.character(Table2_matrix)
for (i in 1:15)
{
Table2_matrix[3, i] <- paste(c(Table2_matrix[3, i], " (", Table2_pMatrix[1, i], ")"), collapse="")
Table2_matrix[4, i] <- paste(c(Table2_matrix[4, i], " (", Table2_pMatrix[2, i], ")"), collapse="")
Table2_matrix[5, i] <- paste(c(Table2_matrix[5, i], " (", Table2_pMatrix[3, i], ")"), collapse="")
Table2_matrix[7, i] <- paste(c(Table2_matrix[7, i], " (", Table2_pMatrix[4, i], ")"), collapse="")
Table2_matrix[8, i] <- paste(c(Table2_matrix[8, i], " (", Table2_pMatrix[5, i], ")"), collapse="")
Table2_matrix[9, i] <- paste(c(Table2_matrix[9, i], " (", Table2_pMatrix[6, i], ")"), collapse="")
Table2_matrix[11, i] <- paste(c(Table2_matrix[11, i], " (", Table2_pMatrix[7, i], ")"), collapse="")
Table2_matrix[12, i] <- paste(c(Table2_matrix[12, i], " (", Table2_pMatrix[8, i], ")"), collapse="")
Table2_matrix[13, i] <- paste(c(Table2_matrix[13, i], " (", Table2_pMatrix[9, i], ")"), collapse="")
Table2_matrix[14, i] <- paste(c(Table2_matrix[14, i], " (", Table2_pMatrix[10, i], ")"), collapse="")
Table2_matrix[16, i] <- paste(c(Table2_matrix[16, i], " (", Table2_pMatrix[11, i], ")"), collapse="")
Table2_matrix[17, i] <- paste(c(Table2_matrix[17, i], " (", Table2_pMatrix[12, i], ")"), collapse="")
Table2_matrix[18, i] <- paste(c(Table2_matrix[18, i], " (", Table2_pMatrix[13, i], ")"), collapse="")
Table2_matrix[19, i] <- paste(c(Table2_matrix[19, i], " (", Table2_pMatrix[14, i], ")"), collapse="")
}
grid.table(Table2_matrix)
install.packages(c("dplyr", "xtable", "vioplot", "ggplot2", "hmisc", "foreign", "rcpp", "ProjectTemplate", "sf", "raster", "spData", "spDataLarge", "tmap", "leaflet", "mapview", "shiny", "devtools", "cluster", "DBI", "odbc", "RMySQL", "xlsx", "XLConnect", "haven", "tidyr", "stringr", "stringi", "car", "mgcv", "glmnet", "survival", "caret", "rmarkdown", "xtable", "sp", "maps", "ggmap", "maptools", "zoo", "xts", "lubridate", "XML", "testthat"))
utils:::menuInstallPkgs()
setRepositories()
getwd()
setwd("C:\Users\ksung\OneDrive\R")
setwd("C:\\Users\\ksung\\OneDrive\\R")
q()
install.packages(c("tidyverse", "ggplot2", "gganimate"))
ls()
myfunction <- function{}
a <-rnorm(100)
a
help(rnorm)
a<-rnorm(4)
a
a<-rnorm(1:3)
a
a<-rnorm(5:10)
a
a<-rnorm(5:10)
a <-10
rnorm(a)
cd R_practice
cd R_practice
ls
dir
dir()
setwd("R_practice")
ls
ls()
dir()
